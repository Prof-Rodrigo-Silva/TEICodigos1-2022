corredor<-c("C1", "C2", "C3", "C4", "C5","C6", "C7", "C8", "c9", "C10")
pace<-c(5.55, 4.59, 5.21, 5.05, 4.45, 5.17, 5.01, 5.34, 5.45, 5.56)
posicao<-c(9, 2, 6, 4, 1, 5, 3, 7, 8, 10)
corredor
pace
posicao
#save(corredor,file = "corredor")
#save(pace,file = "pace")
#save(posicao,file = "posicao")
corrida= data.frame(corredor, pace, posicao)
#Gr?fico de Barras
barplot(corrida$pace, names.arg=corrida$corredor, main="Ranking de tempos", xlab= "Corredores",
ylab="Tempo")
matriz <- rbind (corrida$pace, corrida$posicao)
barplot(matriz, names.arg=corrida$corredor, main= "Classificação", ylab= "Tempo+Ranking",
xlab="Corredores",beside = T, ylim = c(0,11),
xlim = c(1,35))
legend("topright", rownames(corrida), fill = c(1,8), cex = 0.70, legend =c("tempo","ranking"))
#Ler arquivo
cidadesPopulosas <- read.table("/home/rodrigo/Área de Trabalho/RStudio/cidadesPopulosas.csv", sep = ",", dec = ".", header = T)
# Cria gráfico de pizza sobre os assassinatos
pie(cidadesPopulosas$Murder)
# Legenda das cidades com assassinatos
legendasAssassinatos <- paste(names=cidadesPopulosas$X, cidadesPopulosas$Murder)
# Visualiza os dados
legendasAssassinatos
# Taxa de assassinatos
pie(x = cidadesPopulosas$Murder,   # Dados do Gráfico
labels = legendasAssassinatos, # Legendas
main = "Assassinatos")         # Título do gráfico
# Cria gráfico de pizza sobre os assaltos
pie(cidadesPopulosas$Assault)
# Legenda das cidades com assaltos
legendasAssaltos <- paste(names=cidadesPopulosas$X, cidadesPopulosas$Assault)
# Visualiza os dados
legendasAssaltos
# Taxa de assaltos
pie(x = cidadesPopulosas$Assault,   # Dados do Gráfico
labels = legendasAssaltos, # Legendas
main = "Assaltos")         # Título do gráfico
#############################################################
#Atividade 3
data <- data.frame(
name=c( rep("A",500), rep("B",500), rep("B",500), rep("C",20), rep('D', 100)  ),
value=c( rnorm(500, 10, 5), rnorm(500, 13, 1), rnorm(500, 18, 1), rnorm(20, 25, 4), rnorm(100, 12, 1) )
)
View(data)
boxplot(data)
#############################################################
#Atividade 3
dados <- data.frame(
name=c( rep("A",500), rep("B",500), rep("B",500), rep("C",20), rep('D', 100)  ),
value=c( rnorm(500, 10, 5), rnorm(500, 13, 1), rnorm(500, 18, 1), rnorm(20, 25, 4), rnorm(100, 12, 1) )
)
boxplot(dados)
boxplot(dados$value)
boxplot(dados$value~dados$name)
boxplot(dados$value)
boxplot(dados$value, main = "BoxPlot dos Dados")
boxplot(dados$value, main = "BoxPlot dos Dados", col = "blue")
boxplot(dados$value, main = "BoxPlot dos Dados", col = "blue", border = "blue")
boxplot(dados$value, main = "BoxPlot dos Dados", col = "blue", border = "black")
boxplot(dados$value~dados$value==A)
boxplot(dados$value~dados$value)
boxplot(dados$value~dados$name==A)
boxplot(dados$value~dados$name)
boxplot(dados$value~(dados$name=A))
boxplot(dados$value~(dados$name=="A"))
rm(data)
View(dados)
boxplot(dados$value~(dados$name=="B"))
boxplot(dados$value~(dados$name=="C"))
boxplot(dados$value~(dados$name=="D"))
boxplot(dados$value~(dados$name=="E"))
boxplot(dados$value~(dados$name=="F"))
boxplot(dados$value~(dados$name=='A'))
boxplot(dados$value, main = "BoxPlot dos Dados", col = "blue", border = "black")
boxplot(dados$value~dados$name)
boxplot(dados$value~dados$name, xlab = "",ylab = "")
boxplot(dados$value~dados$name, xlab = "Valores",ylab = "Tipos")
boxplot(dados$value~dados$name, xlab = "Tipos",ylab = "Valores")
dadosA <- subset(dados, dados$name==A)
dadosA <- subset(dados, dados$name=="A")
View(dadosA)
boxplot(dados$value)
boxplot(dadosA$value)
boxplot(dados$value~dados$name, xlab = "Tipos",ylab = "Valores", col=c(2,3,4,5))
boxplot(dados$value~dados$name, main = "BoxPlot por Tipo",xlab = "Tipos",ylab = "Valores", col=c(2,3,4,5))
boxplot(dadosA$value, main = "BoxPlot Dados Tipo A",xlab = "Tipo A",ylab = "Valores", col=c(3))
setwd("/home/rodrigo/Área de Trabalho/RStudio")
write.csv(dados,"/home/rodrigo/Área de Trabalho/RStudio/dadosBoxplot.csv", row.names = F)
setwd("/home/rodrigo/Área de Trabalho/RStudio")
dadosBoxplot <- read.table("/home/rodrigo/Área de Trabalho/RStudio/dadosBoxplot.csv", sep = ",", dec = ".", header = T)
rm(dados)
boxplot(dados$value, main = "BoxPlot dos Dados", col = "blue", border = "black")
boxplot(dadosBoxplot$value, main = "BoxPlot dos Dados", col = "blue", border = "black")
boxplot(dadosBoxplot$value~dadosBoxplot$name, main = "BoxPlot por Tipo",xlab = "Tipos",ylab = "Valores", col=c(2,3,4,5))
dadosA <- subset(dadosBoxplot, dados$name=="A", xla)
dadosA <- subset(dadosBoxplot, dadosBoxplot$name=="A", xla)
dadosA <- subset(dadosBoxplot, dadosBoxplot$name=="A")
boxplot(dadosA$value, main = "BoxPlot Dados Tipo A",xlab = "Tipo A",ylab = "Valores", col=c(3))
View(dadosA)
dadosBoxplot <- read.table("/home/rodrigo/Área de Trabalho/RStudio/dadosBoxplot.csv", sep = ",", dec = ".", header = T)
#BOXPLOT DOS DADOS
boxplot(dadosBoxplot$value, main = "BoxPlot dos Dados", col = "blue", border = "black")
#BOXPLOT DOS DADOS POR VARIÁVEIS(A,B,C,D)
boxplot(dadosBoxplot$value~dadosBoxplot$name, main = "BoxPlot por Tipo",xlab = "Tipos",ylab = "Valores", col=c(2,3,4,5))
#SUBSET PARA CRIAR NOVO OBJETOS DE DADOS, NO CASO SÓ DO TIPO A
dadosA <- subset(dadosBoxplot, dadosBoxplot$name=="A")
#BOXPLOR DO NOVO OBJETO
boxplot(dadosA$value, main = "BoxPlot Dados Tipo A",xlab = "Tipo A",ylab = "Valores", col=c(3))
library(sf)
library(geobr)
library(magrittr)
library(dplyr)
library(colorspace)
library(ggplot2)
library(leaflet)
rs <- read_municipality(code_muni = 'RS', year=2018)
ggplot(rs) + geom_sf(fill="#2D3E50", color = "#FEBF57", size=.15, show.legend = FALSE)
rs
View(rs)
#Retirar linhas
linhas <- c(1,2)
rs <- rs[-linhas,]
ggplot(rs) + geom_sf(fill="#2D3E50", color = "#FEBF57", size=.15, show.legend = FALSE)
library(readr)
covid19_367887fae3de4815b3414e3e9a3bff34 <- read_csv("covid19-367887fae3de4815b3414e3e9a3bff34.csv")
View(covid19_367887fae3de4815b3414e3e9a3bff34)
casosRS <- covid19_367887fae3de4815b3414e3e9a3bff34
linhas <- c(499)
casosRS <- casosRS[-linhas,]
View(rs)
#Remover colunas
colunas<- c(3,4)
rs <- rs[,-colunas]
View(rs)
colunas<- c(1,2,4,7)
View(casosRS)
colunas<- c(1,2,4,7)
casosRS <- casosRS[,-colunas]
View(casosRS)
rsCasosCovid <- merge(rs, casosRS, by.x="code_muni", by.y="city_ibge_code")
View(rsCasosCovid)
map <- leaflet(rsCasosCovid) %>% addTiles()
map %>% addPolygons()
map %>% addPolygons(
weight = 1,
opacity = 0.5,
color = "blue",
dashArray = "1",
fillOpacity = 0
)
map %>% addPolygons(
weight = 1,
opacity = 0.5,
color = "black",
dashArray = "1",
fillOpacity = 0
)
#Bins e Colors
bins <- c(0,10,20,50,100,200,500,1000,Inf)
pal <- colorBin("YlOrRd", domain = rsCasosCovid$deaths, bins = bins)
map %>% addPolygons(
fillColor = ~pal(deaths),
weight = 2,
opacity = 1,
color = "white",
dashArray = "1",
fillOpacity = 0.7
)
map %>% addPolygons(
fillColor = ~pal(deaths),
weight = 2,
opacity = 1,
color = "black",
dashArray = "1",
fillOpacity = 0.7
)
#Add Interatividade
map %>% addPolygons(
fillColor = ~pal(deaths),
weight = 2,
opacity = 1,
color = "white",
dashArray = "1",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray ="",
fillOpacity = 0.7,
bringToFront = TRUE))
#Add Interatividade
map %>% addPolygons(
fillColor = ~pal(deaths),
weight = 2,
opacity = 1,
color = "white",
dashArray = "1",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray ="",
fillOpacity = 0.7,
bringToFront = F))
#Add Interatividade
map %>% addPolygons(
fillColor = ~pal(deaths),
weight = 2,
opacity = 1,
color = "white",
dashArray = "1",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray ="",
fillOpacity = 0.7,
bringToFront = T))
map %>% addPolygons(
fillColor = ~pal(deaths),
weight = 2,
opacity = 1,
color = "white",
dashArray = "1",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray ="",
fillOpacity = 0.7,
bringToFront = TRUE),
label = label,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"
))
label <- sprintf(
"<strong>%s</strong></br>%g Confirmados</br>%g Óbitos",
rsCasosCovid$name_muni, rsCasosCovid$confirmed,rsCasosCovid$deaths
) %>% lapply(htmltools::HTML)
map %>% addPolygons(
fillColor = ~pal(deaths),
weight = 2,
opacity = 1,
color = "white",
dashArray = "1",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray ="",
fillOpacity = 0.7,
bringToFront = TRUE),
label = label,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"
))
map %>% addPolygons(
fillColor = ~pal(deaths),
weight = 2,
opacity = 1,
color = "white",
dashArray = "1",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray ="",
fillOpacity = 0.7,
bringToFront = TRUE),
label = label,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"
)) %>% addLegend(pal = pal,
values = ~deaths,
opacity = 0.7,
title = "Casos de óbitos",
position = "bottomright")
